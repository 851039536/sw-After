//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace After_Test.MevnService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback checkEmpNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkSN_RouteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ASSY_DataOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendTestResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback SN_Relation_BATTERYOperationCompleted;
        
        private System.Threading.SendOrPostCallback Bluetooth_IDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Query_Bluetooth_IDOperationCompleted;
        
        private System.Threading.SendOrPostCallback QUERY_WO_SNANDPANELNOOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSNInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkAssyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback Unbind_Bluetooth_IDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDCSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkSN_StationOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendTestDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback input_snOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_DC_ResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBDAFailQtyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMESBDAWOInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Query_Link_SNOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertSNLinkSSNRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLinkDataBySNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSNByLinkDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMESUseNextBDANoTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMESUseNextBDANoTest2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMES_Check_SN_BDA_KEYOperationCompleted;
        
        private System.Threading.SendOrPostCallback MESWriteBDALogOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatTETestResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback MESGetQCRecordBDACNTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMESQCUserNextBDANoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBDNoBySnOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMESNextFailBDANoOperationCompleted;
        
        private System.Threading.SendOrPostCallback MESGetQCRecordBDACNTByMOOperationCompleted;
        
        private System.Threading.SendOrPostCallback MESWritBDAUpadeRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMESQCUserNextBDANo2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::After_Test.Properties.Settings.Default.After_Test_MevnService_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event checkEmpNoCompletedEventHandler checkEmpNoCompleted;
        
        /// <remarks/>
        public event checkSN_RouteCompletedEventHandler checkSN_RouteCompleted;
        
        /// <remarks/>
        public event ASSY_DataCompletedEventHandler ASSY_DataCompleted;
        
        /// <remarks/>
        public event sendTestResultCompletedEventHandler sendTestResultCompleted;
        
        /// <remarks/>
        public event SN_Relation_BATTERYCompletedEventHandler SN_Relation_BATTERYCompleted;
        
        /// <remarks/>
        public event Bluetooth_IDCompletedEventHandler Bluetooth_IDCompleted;
        
        /// <remarks/>
        public event Query_Bluetooth_IDCompletedEventHandler Query_Bluetooth_IDCompleted;
        
        /// <remarks/>
        public event QUERY_WO_SNANDPANELNOCompletedEventHandler QUERY_WO_SNANDPANELNOCompleted;
        
        /// <remarks/>
        public event InsertSNInformationCompletedEventHandler InsertSNInformationCompleted;
        
        /// <remarks/>
        public event checkAssyDataCompletedEventHandler checkAssyDataCompleted;
        
        /// <remarks/>
        public event Unbind_Bluetooth_IDCompletedEventHandler Unbind_Bluetooth_IDCompleted;
        
        /// <remarks/>
        public event InsertSSNCompletedEventHandler InsertSSNCompleted;
        
        /// <remarks/>
        public event InsertDCSNCompletedEventHandler InsertDCSNCompleted;
        
        /// <remarks/>
        public event checkSN_StationCompletedEventHandler checkSN_StationCompleted;
        
        /// <remarks/>
        public event sendTestDataCompletedEventHandler sendTestDataCompleted;
        
        /// <remarks/>
        public event input_snCompletedEventHandler input_snCompleted;
        
        /// <remarks/>
        public event Insert_DC_ResultCompletedEventHandler Insert_DC_ResultCompleted;
        
        /// <remarks/>
        public event GetBDAFailQtyCompletedEventHandler GetBDAFailQtyCompleted;
        
        /// <remarks/>
        public event GetEMESBDAWOInfoCompletedEventHandler GetEMESBDAWOInfoCompleted;
        
        /// <remarks/>
        public event Query_Link_SNCompletedEventHandler Query_Link_SNCompleted;
        
        /// <remarks/>
        public event insertSNLinkSSNRecCompletedEventHandler insertSNLinkSSNRecCompleted;
        
        /// <remarks/>
        public event getLinkDataBySNCompletedEventHandler getLinkDataBySNCompleted;
        
        /// <remarks/>
        public event getSNByLinkDataCompletedEventHandler getSNByLinkDataCompleted;
        
        /// <remarks/>
        public event GetEMESUseNextBDANoTestCompletedEventHandler GetEMESUseNextBDANoTestCompleted;
        
        /// <remarks/>
        public event GetEMESUseNextBDANoTest2CompletedEventHandler GetEMESUseNextBDANoTest2Completed;
        
        /// <remarks/>
        public event GetEMES_Check_SN_BDA_KEYCompletedEventHandler GetEMES_Check_SN_BDA_KEYCompleted;
        
        /// <remarks/>
        public event MESWriteBDALogCompletedEventHandler MESWriteBDALogCompleted;
        
        /// <remarks/>
        public event UpdatTETestResultCompletedEventHandler UpdatTETestResultCompleted;
        
        /// <remarks/>
        public event MESGetQCRecordBDACNTCompletedEventHandler MESGetQCRecordBDACNTCompleted;
        
        /// <remarks/>
        public event GetMESQCUserNextBDANoCompletedEventHandler GetMESQCUserNextBDANoCompleted;
        
        /// <remarks/>
        public event GetBDNoBySnCompletedEventHandler GetBDNoBySnCompleted;
        
        /// <remarks/>
        public event GetMESNextFailBDANoCompletedEventHandler GetMESNextFailBDANoCompleted;
        
        /// <remarks/>
        public event MESGetQCRecordBDACNTByMOCompletedEventHandler MESGetQCRecordBDACNTByMOCompleted;
        
        /// <remarks/>
        public event MESWritBDAUpadeRecordCompletedEventHandler MESWritBDAUpadeRecordCompleted;
        
        /// <remarks/>
        public event GetMESQCUserNextBDANo2CompletedEventHandler GetMESQCUserNextBDANo2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkEmpNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string checkEmpNo(string sEMP, string sStation) {
            object[] results = this.Invoke("checkEmpNo", new object[] {
                        sEMP,
                        sStation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkEmpNoAsync(string sEMP, string sStation) {
            this.checkEmpNoAsync(sEMP, sStation, null);
        }
        
        /// <remarks/>
        public void checkEmpNoAsync(string sEMP, string sStation, object userState) {
            if ((this.checkEmpNoOperationCompleted == null)) {
                this.checkEmpNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckEmpNoOperationCompleted);
            }
            this.InvokeAsync("checkEmpNo", new object[] {
                        sEMP,
                        sStation}, this.checkEmpNoOperationCompleted, userState);
        }
        
        private void OncheckEmpNoOperationCompleted(object arg) {
            if ((this.checkEmpNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkEmpNoCompleted(this, new checkEmpNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkSN_Route", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string checkSN_Route(string sSN, string sStation) {
            object[] results = this.Invoke("checkSN_Route", new object[] {
                        sSN,
                        sStation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkSN_RouteAsync(string sSN, string sStation) {
            this.checkSN_RouteAsync(sSN, sStation, null);
        }
        
        /// <remarks/>
        public void checkSN_RouteAsync(string sSN, string sStation, object userState) {
            if ((this.checkSN_RouteOperationCompleted == null)) {
                this.checkSN_RouteOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckSN_RouteOperationCompleted);
            }
            this.InvokeAsync("checkSN_Route", new object[] {
                        sSN,
                        sStation}, this.checkSN_RouteOperationCompleted, userState);
        }
        
        private void OncheckSN_RouteOperationCompleted(object arg) {
            if ((this.checkSN_RouteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkSN_RouteCompleted(this, new checkSN_RouteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ASSY_Data", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ASSY_Data(string TEMP, string TSN, string TKPSN, string TSTATION) {
            object[] results = this.Invoke("ASSY_Data", new object[] {
                        TEMP,
                        TSN,
                        TKPSN,
                        TSTATION});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ASSY_DataAsync(string TEMP, string TSN, string TKPSN, string TSTATION) {
            this.ASSY_DataAsync(TEMP, TSN, TKPSN, TSTATION, null);
        }
        
        /// <remarks/>
        public void ASSY_DataAsync(string TEMP, string TSN, string TKPSN, string TSTATION, object userState) {
            if ((this.ASSY_DataOperationCompleted == null)) {
                this.ASSY_DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnASSY_DataOperationCompleted);
            }
            this.InvokeAsync("ASSY_Data", new object[] {
                        TEMP,
                        TSN,
                        TKPSN,
                        TSTATION}, this.ASSY_DataOperationCompleted, userState);
        }
        
        private void OnASSY_DataOperationCompleted(object arg) {
            if ((this.ASSY_DataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ASSY_DataCompleted(this, new ASSY_DataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendTestResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendTestResult(string sEMP, string sSN, string sStation, string sResult) {
            object[] results = this.Invoke("sendTestResult", new object[] {
                        sEMP,
                        sSN,
                        sStation,
                        sResult});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendTestResultAsync(string sEMP, string sSN, string sStation, string sResult) {
            this.sendTestResultAsync(sEMP, sSN, sStation, sResult, null);
        }
        
        /// <remarks/>
        public void sendTestResultAsync(string sEMP, string sSN, string sStation, string sResult, object userState) {
            if ((this.sendTestResultOperationCompleted == null)) {
                this.sendTestResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendTestResultOperationCompleted);
            }
            this.InvokeAsync("sendTestResult", new object[] {
                        sEMP,
                        sSN,
                        sStation,
                        sResult}, this.sendTestResultOperationCompleted, userState);
        }
        
        private void OnsendTestResultOperationCompleted(object arg) {
            if ((this.sendTestResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendTestResultCompleted(this, new sendTestResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SN_Relation_BATTERY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SN_Relation_BATTERY(string sEMP, string sSN, string sStation, string sBattery) {
            object[] results = this.Invoke("SN_Relation_BATTERY", new object[] {
                        sEMP,
                        sSN,
                        sStation,
                        sBattery});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SN_Relation_BATTERYAsync(string sEMP, string sSN, string sStation, string sBattery) {
            this.SN_Relation_BATTERYAsync(sEMP, sSN, sStation, sBattery, null);
        }
        
        /// <remarks/>
        public void SN_Relation_BATTERYAsync(string sEMP, string sSN, string sStation, string sBattery, object userState) {
            if ((this.SN_Relation_BATTERYOperationCompleted == null)) {
                this.SN_Relation_BATTERYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSN_Relation_BATTERYOperationCompleted);
            }
            this.InvokeAsync("SN_Relation_BATTERY", new object[] {
                        sEMP,
                        sSN,
                        sStation,
                        sBattery}, this.SN_Relation_BATTERYOperationCompleted, userState);
        }
        
        private void OnSN_Relation_BATTERYOperationCompleted(object arg) {
            if ((this.SN_Relation_BATTERYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SN_Relation_BATTERYCompleted(this, new SN_Relation_BATTERYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bluetooth_ID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Bluetooth_ID(string sSN, string sLnkData) {
            object[] results = this.Invoke("Bluetooth_ID", new object[] {
                        sSN,
                        sLnkData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Bluetooth_IDAsync(string sSN, string sLnkData) {
            this.Bluetooth_IDAsync(sSN, sLnkData, null);
        }
        
        /// <remarks/>
        public void Bluetooth_IDAsync(string sSN, string sLnkData, object userState) {
            if ((this.Bluetooth_IDOperationCompleted == null)) {
                this.Bluetooth_IDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBluetooth_IDOperationCompleted);
            }
            this.InvokeAsync("Bluetooth_ID", new object[] {
                        sSN,
                        sLnkData}, this.Bluetooth_IDOperationCompleted, userState);
        }
        
        private void OnBluetooth_IDOperationCompleted(object arg) {
            if ((this.Bluetooth_IDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Bluetooth_IDCompleted(this, new Bluetooth_IDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Query_Bluetooth_ID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Query_Bluetooth_ID(string sSN) {
            object[] results = this.Invoke("Query_Bluetooth_ID", new object[] {
                        sSN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Query_Bluetooth_IDAsync(string sSN) {
            this.Query_Bluetooth_IDAsync(sSN, null);
        }
        
        /// <remarks/>
        public void Query_Bluetooth_IDAsync(string sSN, object userState) {
            if ((this.Query_Bluetooth_IDOperationCompleted == null)) {
                this.Query_Bluetooth_IDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuery_Bluetooth_IDOperationCompleted);
            }
            this.InvokeAsync("Query_Bluetooth_ID", new object[] {
                        sSN}, this.Query_Bluetooth_IDOperationCompleted, userState);
        }
        
        private void OnQuery_Bluetooth_IDOperationCompleted(object arg) {
            if ((this.Query_Bluetooth_IDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Query_Bluetooth_IDCompleted(this, new Query_Bluetooth_IDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QUERY_WO_SNANDPANELNO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QUERY_WO_SNANDPANELNO(string sWO) {
            object[] results = this.Invoke("QUERY_WO_SNANDPANELNO", new object[] {
                        sWO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QUERY_WO_SNANDPANELNOAsync(string sWO) {
            this.QUERY_WO_SNANDPANELNOAsync(sWO, null);
        }
        
        /// <remarks/>
        public void QUERY_WO_SNANDPANELNOAsync(string sWO, object userState) {
            if ((this.QUERY_WO_SNANDPANELNOOperationCompleted == null)) {
                this.QUERY_WO_SNANDPANELNOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQUERY_WO_SNANDPANELNOOperationCompleted);
            }
            this.InvokeAsync("QUERY_WO_SNANDPANELNO", new object[] {
                        sWO}, this.QUERY_WO_SNANDPANELNOOperationCompleted, userState);
        }
        
        private void OnQUERY_WO_SNANDPANELNOOperationCompleted(object arg) {
            if ((this.QUERY_WO_SNANDPANELNOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QUERY_WO_SNANDPANELNOCompleted(this, new QUERY_WO_SNANDPANELNOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertSNInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertSNInformation(string sWO, string sPanelNO, string sSN) {
            object[] results = this.Invoke("InsertSNInformation", new object[] {
                        sWO,
                        sPanelNO,
                        sSN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSNInformationAsync(string sWO, string sPanelNO, string sSN) {
            this.InsertSNInformationAsync(sWO, sPanelNO, sSN, null);
        }
        
        /// <remarks/>
        public void InsertSNInformationAsync(string sWO, string sPanelNO, string sSN, object userState) {
            if ((this.InsertSNInformationOperationCompleted == null)) {
                this.InsertSNInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSNInformationOperationCompleted);
            }
            this.InvokeAsync("InsertSNInformation", new object[] {
                        sWO,
                        sPanelNO,
                        sSN}, this.InsertSNInformationOperationCompleted, userState);
        }
        
        private void OnInsertSNInformationOperationCompleted(object arg) {
            if ((this.InsertSNInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSNInformationCompleted(this, new InsertSNInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkAssyData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string checkAssyData(string sSN, string sTERMINALNAME, string sEMPNO) {
            object[] results = this.Invoke("checkAssyData", new object[] {
                        sSN,
                        sTERMINALNAME,
                        sEMPNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkAssyDataAsync(string sSN, string sTERMINALNAME, string sEMPNO) {
            this.checkAssyDataAsync(sSN, sTERMINALNAME, sEMPNO, null);
        }
        
        /// <remarks/>
        public void checkAssyDataAsync(string sSN, string sTERMINALNAME, string sEMPNO, object userState) {
            if ((this.checkAssyDataOperationCompleted == null)) {
                this.checkAssyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckAssyDataOperationCompleted);
            }
            this.InvokeAsync("checkAssyData", new object[] {
                        sSN,
                        sTERMINALNAME,
                        sEMPNO}, this.checkAssyDataOperationCompleted, userState);
        }
        
        private void OncheckAssyDataOperationCompleted(object arg) {
            if ((this.checkAssyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkAssyDataCompleted(this, new checkAssyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Unbind_Bluetooth_ID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Unbind_Bluetooth_ID(string strEmpNo, string sSN, string strBDs) {
            object[] results = this.Invoke("Unbind_Bluetooth_ID", new object[] {
                        strEmpNo,
                        sSN,
                        strBDs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Unbind_Bluetooth_IDAsync(string strEmpNo, string sSN, string strBDs) {
            this.Unbind_Bluetooth_IDAsync(strEmpNo, sSN, strBDs, null);
        }
        
        /// <remarks/>
        public void Unbind_Bluetooth_IDAsync(string strEmpNo, string sSN, string strBDs, object userState) {
            if ((this.Unbind_Bluetooth_IDOperationCompleted == null)) {
                this.Unbind_Bluetooth_IDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnbind_Bluetooth_IDOperationCompleted);
            }
            this.InvokeAsync("Unbind_Bluetooth_ID", new object[] {
                        strEmpNo,
                        sSN,
                        strBDs}, this.Unbind_Bluetooth_IDOperationCompleted, userState);
        }
        
        private void OnUnbind_Bluetooth_IDOperationCompleted(object arg) {
            if ((this.Unbind_Bluetooth_IDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Unbind_Bluetooth_IDCompleted(this, new Unbind_Bluetooth_IDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertSSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertSSN(string sSN, string sLnkData) {
            object[] results = this.Invoke("InsertSSN", new object[] {
                        sSN,
                        sLnkData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSSNAsync(string sSN, string sLnkData) {
            this.InsertSSNAsync(sSN, sLnkData, null);
        }
        
        /// <remarks/>
        public void InsertSSNAsync(string sSN, string sLnkData, object userState) {
            if ((this.InsertSSNOperationCompleted == null)) {
                this.InsertSSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSSNOperationCompleted);
            }
            this.InvokeAsync("InsertSSN", new object[] {
                        sSN,
                        sLnkData}, this.InsertSSNOperationCompleted, userState);
        }
        
        private void OnInsertSSNOperationCompleted(object arg) {
            if ((this.InsertSSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSSNCompleted(this, new InsertSSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertDCSN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertDCSN(string sSN, string sKPSNTYPE, string sKPSN) {
            object[] results = this.Invoke("InsertDCSN", new object[] {
                        sSN,
                        sKPSNTYPE,
                        sKPSN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDCSNAsync(string sSN, string sKPSNTYPE, string sKPSN) {
            this.InsertDCSNAsync(sSN, sKPSNTYPE, sKPSN, null);
        }
        
        /// <remarks/>
        public void InsertDCSNAsync(string sSN, string sKPSNTYPE, string sKPSN, object userState) {
            if ((this.InsertDCSNOperationCompleted == null)) {
                this.InsertDCSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDCSNOperationCompleted);
            }
            this.InvokeAsync("InsertDCSN", new object[] {
                        sSN,
                        sKPSNTYPE,
                        sKPSN}, this.InsertDCSNOperationCompleted, userState);
        }
        
        private void OnInsertDCSNOperationCompleted(object arg) {
            if ((this.InsertDCSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDCSNCompleted(this, new InsertDCSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkSN_Station", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string checkSN_Station(string sn, string station) {
            object[] results = this.Invoke("checkSN_Station", new object[] {
                        sn,
                        station});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkSN_StationAsync(string sn, string station) {
            this.checkSN_StationAsync(sn, station, null);
        }
        
        /// <remarks/>
        public void checkSN_StationAsync(string sn, string station, object userState) {
            if ((this.checkSN_StationOperationCompleted == null)) {
                this.checkSN_StationOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckSN_StationOperationCompleted);
            }
            this.InvokeAsync("checkSN_Station", new object[] {
                        sn,
                        station}, this.checkSN_StationOperationCompleted, userState);
        }
        
        private void OncheckSN_StationOperationCompleted(object arg) {
            if ((this.checkSN_StationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkSN_StationCompleted(this, new checkSN_StationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendTestData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendTestData(string sEMP, string sSN, string sStation, string sTestResult) {
            object[] results = this.Invoke("sendTestData", new object[] {
                        sEMP,
                        sSN,
                        sStation,
                        sTestResult});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendTestDataAsync(string sEMP, string sSN, string sStation, string sTestResult) {
            this.sendTestDataAsync(sEMP, sSN, sStation, sTestResult, null);
        }
        
        /// <remarks/>
        public void sendTestDataAsync(string sEMP, string sSN, string sStation, string sTestResult, object userState) {
            if ((this.sendTestDataOperationCompleted == null)) {
                this.sendTestDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendTestDataOperationCompleted);
            }
            this.InvokeAsync("sendTestData", new object[] {
                        sEMP,
                        sSN,
                        sStation,
                        sTestResult}, this.sendTestDataOperationCompleted, userState);
        }
        
        private void OnsendTestDataOperationCompleted(object arg) {
            if ((this.sendTestDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendTestDataCompleted(this, new sendTestDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/input_sn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string input_sn(string emp, string TSN, string sWo, string sStation) {
            object[] results = this.Invoke("input_sn", new object[] {
                        emp,
                        TSN,
                        sWo,
                        sStation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void input_snAsync(string emp, string TSN, string sWo, string sStation) {
            this.input_snAsync(emp, TSN, sWo, sStation, null);
        }
        
        /// <remarks/>
        public void input_snAsync(string emp, string TSN, string sWo, string sStation, object userState) {
            if ((this.input_snOperationCompleted == null)) {
                this.input_snOperationCompleted = new System.Threading.SendOrPostCallback(this.Oninput_snOperationCompleted);
            }
            this.InvokeAsync("input_sn", new object[] {
                        emp,
                        TSN,
                        sWo,
                        sStation}, this.input_snOperationCompleted, userState);
        }
        
        private void Oninput_snOperationCompleted(object arg) {
            if ((this.input_snCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.input_snCompleted(this, new input_snCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_DC_Result", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Insert_DC_Result(string TSN, string TResult, string TEMP) {
            object[] results = this.Invoke("Insert_DC_Result", new object[] {
                        TSN,
                        TResult,
                        TEMP});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_DC_ResultAsync(string TSN, string TResult, string TEMP) {
            this.Insert_DC_ResultAsync(TSN, TResult, TEMP, null);
        }
        
        /// <remarks/>
        public void Insert_DC_ResultAsync(string TSN, string TResult, string TEMP, object userState) {
            if ((this.Insert_DC_ResultOperationCompleted == null)) {
                this.Insert_DC_ResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_DC_ResultOperationCompleted);
            }
            this.InvokeAsync("Insert_DC_Result", new object[] {
                        TSN,
                        TResult,
                        TEMP}, this.Insert_DC_ResultOperationCompleted, userState);
        }
        
        private void OnInsert_DC_ResultOperationCompleted(object arg) {
            if ((this.Insert_DC_ResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_DC_ResultCompleted(this, new Insert_DC_ResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBDAFailQty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBDAFailQty(string TWO, string TStatus) {
            object[] results = this.Invoke("GetBDAFailQty", new object[] {
                        TWO,
                        TStatus});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBDAFailQtyAsync(string TWO, string TStatus) {
            this.GetBDAFailQtyAsync(TWO, TStatus, null);
        }
        
        /// <remarks/>
        public void GetBDAFailQtyAsync(string TWO, string TStatus, object userState) {
            if ((this.GetBDAFailQtyOperationCompleted == null)) {
                this.GetBDAFailQtyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBDAFailQtyOperationCompleted);
            }
            this.InvokeAsync("GetBDAFailQty", new object[] {
                        TWO,
                        TStatus}, this.GetBDAFailQtyOperationCompleted, userState);
        }
        
        private void OnGetBDAFailQtyOperationCompleted(object arg) {
            if ((this.GetBDAFailQtyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBDAFailQtyCompleted(this, new GetBDAFailQtyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEMESBDAWOInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetEMESBDAWOInfo(string ls_WONo, string ls_IsAssignOver, out string ls_AssignUsedCount, out string ls_AssignBDStartNo, out string ls_AssignBDEndNo, out string ls_FormAssignCount, out string ls_FormBDStartNo, out string ls_FormBDEndNo, out string ls_UsedLastNo, out string[] ls_CVCNoS, out string ls_ErrMsg) {
            object[] results = this.Invoke("GetEMESBDAWOInfo", new object[] {
                        ls_WONo,
                        ls_IsAssignOver});
            ls_AssignUsedCount = ((string)(results[1]));
            ls_AssignBDStartNo = ((string)(results[2]));
            ls_AssignBDEndNo = ((string)(results[3]));
            ls_FormAssignCount = ((string)(results[4]));
            ls_FormBDStartNo = ((string)(results[5]));
            ls_FormBDEndNo = ((string)(results[6]));
            ls_UsedLastNo = ((string)(results[7]));
            ls_CVCNoS = ((string[])(results[8]));
            ls_ErrMsg = ((string)(results[9]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetEMESBDAWOInfoAsync(string ls_WONo, string ls_IsAssignOver) {
            this.GetEMESBDAWOInfoAsync(ls_WONo, ls_IsAssignOver, null);
        }
        
        /// <remarks/>
        public void GetEMESBDAWOInfoAsync(string ls_WONo, string ls_IsAssignOver, object userState) {
            if ((this.GetEMESBDAWOInfoOperationCompleted == null)) {
                this.GetEMESBDAWOInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMESBDAWOInfoOperationCompleted);
            }
            this.InvokeAsync("GetEMESBDAWOInfo", new object[] {
                        ls_WONo,
                        ls_IsAssignOver}, this.GetEMESBDAWOInfoOperationCompleted, userState);
        }
        
        private void OnGetEMESBDAWOInfoOperationCompleted(object arg) {
            if ((this.GetEMESBDAWOInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMESBDAWOInfoCompleted(this, new GetEMESBDAWOInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Query_Link_SN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Query_Link_SN(string sSN, string sType) {
            object[] results = this.Invoke("Query_Link_SN", new object[] {
                        sSN,
                        sType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Query_Link_SNAsync(string sSN, string sType) {
            this.Query_Link_SNAsync(sSN, sType, null);
        }
        
        /// <remarks/>
        public void Query_Link_SNAsync(string sSN, string sType, object userState) {
            if ((this.Query_Link_SNOperationCompleted == null)) {
                this.Query_Link_SNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuery_Link_SNOperationCompleted);
            }
            this.InvokeAsync("Query_Link_SN", new object[] {
                        sSN,
                        sType}, this.Query_Link_SNOperationCompleted, userState);
        }
        
        private void OnQuery_Link_SNOperationCompleted(object arg) {
            if ((this.Query_Link_SNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Query_Link_SNCompleted(this, new Query_Link_SNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertSNLinkSSNRec", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string insertSNLinkSSNRec(string pSerialNumber, string pLnkData) {
            object[] results = this.Invoke("insertSNLinkSSNRec", new object[] {
                        pSerialNumber,
                        pLnkData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void insertSNLinkSSNRecAsync(string pSerialNumber, string pLnkData) {
            this.insertSNLinkSSNRecAsync(pSerialNumber, pLnkData, null);
        }
        
        /// <remarks/>
        public void insertSNLinkSSNRecAsync(string pSerialNumber, string pLnkData, object userState) {
            if ((this.insertSNLinkSSNRecOperationCompleted == null)) {
                this.insertSNLinkSSNRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertSNLinkSSNRecOperationCompleted);
            }
            this.InvokeAsync("insertSNLinkSSNRec", new object[] {
                        pSerialNumber,
                        pLnkData}, this.insertSNLinkSSNRecOperationCompleted, userState);
        }
        
        private void OninsertSNLinkSSNRecOperationCompleted(object arg) {
            if ((this.insertSNLinkSSNRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertSNLinkSSNRecCompleted(this, new insertSNLinkSSNRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLinkDataBySN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getLinkDataBySN(string pSerialNumber) {
            object[] results = this.Invoke("getLinkDataBySN", new object[] {
                        pSerialNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLinkDataBySNAsync(string pSerialNumber) {
            this.getLinkDataBySNAsync(pSerialNumber, null);
        }
        
        /// <remarks/>
        public void getLinkDataBySNAsync(string pSerialNumber, object userState) {
            if ((this.getLinkDataBySNOperationCompleted == null)) {
                this.getLinkDataBySNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLinkDataBySNOperationCompleted);
            }
            this.InvokeAsync("getLinkDataBySN", new object[] {
                        pSerialNumber}, this.getLinkDataBySNOperationCompleted, userState);
        }
        
        private void OngetLinkDataBySNOperationCompleted(object arg) {
            if ((this.getLinkDataBySNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLinkDataBySNCompleted(this, new getLinkDataBySNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSNByLinkData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSNByLinkData(string pLnkData) {
            object[] results = this.Invoke("getSNByLinkData", new object[] {
                        pLnkData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSNByLinkDataAsync(string pLnkData) {
            this.getSNByLinkDataAsync(pLnkData, null);
        }
        
        /// <remarks/>
        public void getSNByLinkDataAsync(string pLnkData, object userState) {
            if ((this.getSNByLinkDataOperationCompleted == null)) {
                this.getSNByLinkDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSNByLinkDataOperationCompleted);
            }
            this.InvokeAsync("getSNByLinkData", new object[] {
                        pLnkData}, this.getSNByLinkDataOperationCompleted, userState);
        }
        
        private void OngetSNByLinkDataOperationCompleted(object arg) {
            if ((this.getSNByLinkDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSNByLinkDataCompleted(this, new getSNByLinkDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEMESUseNextBDANoTest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEMESUseNextBDANoTest(string ls_WONo, string TempBDA, string ls_TestNodeID, string ls_UID, out string ls_UsedLastNo, out string[] ls_CVCNoS) {
            object[] results = this.Invoke("GetEMESUseNextBDANoTest", new object[] {
                        ls_WONo,
                        TempBDA,
                        ls_TestNodeID,
                        ls_UID});
            ls_UsedLastNo = ((string)(results[1]));
            ls_CVCNoS = ((string[])(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEMESUseNextBDANoTestAsync(string ls_WONo, string TempBDA, string ls_TestNodeID, string ls_UID) {
            this.GetEMESUseNextBDANoTestAsync(ls_WONo, TempBDA, ls_TestNodeID, ls_UID, null);
        }
        
        /// <remarks/>
        public void GetEMESUseNextBDANoTestAsync(string ls_WONo, string TempBDA, string ls_TestNodeID, string ls_UID, object userState) {
            if ((this.GetEMESUseNextBDANoTestOperationCompleted == null)) {
                this.GetEMESUseNextBDANoTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMESUseNextBDANoTestOperationCompleted);
            }
            this.InvokeAsync("GetEMESUseNextBDANoTest", new object[] {
                        ls_WONo,
                        TempBDA,
                        ls_TestNodeID,
                        ls_UID}, this.GetEMESUseNextBDANoTestOperationCompleted, userState);
        }
        
        private void OnGetEMESUseNextBDANoTestOperationCompleted(object arg) {
            if ((this.GetEMESUseNextBDANoTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMESUseNextBDANoTestCompleted(this, new GetEMESUseNextBDANoTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEMESUseNextBDANoTest2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEMESUseNextBDANoTest2(string ls_WONo, string TempBDA, string ls_SN, string ls_TestNodeID, string ls_UID, out string ls_UsedLastNo, out string[] ls_CVCNoS, out string ls_ErrMsg) {
            object[] results = this.Invoke("GetEMESUseNextBDANoTest2", new object[] {
                        ls_WONo,
                        TempBDA,
                        ls_SN,
                        ls_TestNodeID,
                        ls_UID});
            ls_UsedLastNo = ((string)(results[1]));
            ls_CVCNoS = ((string[])(results[2]));
            ls_ErrMsg = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEMESUseNextBDANoTest2Async(string ls_WONo, string TempBDA, string ls_SN, string ls_TestNodeID, string ls_UID) {
            this.GetEMESUseNextBDANoTest2Async(ls_WONo, TempBDA, ls_SN, ls_TestNodeID, ls_UID, null);
        }
        
        /// <remarks/>
        public void GetEMESUseNextBDANoTest2Async(string ls_WONo, string TempBDA, string ls_SN, string ls_TestNodeID, string ls_UID, object userState) {
            if ((this.GetEMESUseNextBDANoTest2OperationCompleted == null)) {
                this.GetEMESUseNextBDANoTest2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMESUseNextBDANoTest2OperationCompleted);
            }
            this.InvokeAsync("GetEMESUseNextBDANoTest2", new object[] {
                        ls_WONo,
                        TempBDA,
                        ls_SN,
                        ls_TestNodeID,
                        ls_UID}, this.GetEMESUseNextBDANoTest2OperationCompleted, userState);
        }
        
        private void OnGetEMESUseNextBDANoTest2OperationCompleted(object arg) {
            if ((this.GetEMESUseNextBDANoTest2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMESUseNextBDANoTest2Completed(this, new GetEMESUseNextBDANoTest2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEMES_Check_SN_BDA_KEY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetEMES_Check_SN_BDA_KEY(string ls_SN, string ls_BDA, string[] ls_keySet, out string ls_ErrMsg) {
            object[] results = this.Invoke("GetEMES_Check_SN_BDA_KEY", new object[] {
                        ls_SN,
                        ls_BDA,
                        ls_keySet});
            ls_ErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetEMES_Check_SN_BDA_KEYAsync(string ls_SN, string ls_BDA, string[] ls_keySet) {
            this.GetEMES_Check_SN_BDA_KEYAsync(ls_SN, ls_BDA, ls_keySet, null);
        }
        
        /// <remarks/>
        public void GetEMES_Check_SN_BDA_KEYAsync(string ls_SN, string ls_BDA, string[] ls_keySet, object userState) {
            if ((this.GetEMES_Check_SN_BDA_KEYOperationCompleted == null)) {
                this.GetEMES_Check_SN_BDA_KEYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMES_Check_SN_BDA_KEYOperationCompleted);
            }
            this.InvokeAsync("GetEMES_Check_SN_BDA_KEY", new object[] {
                        ls_SN,
                        ls_BDA,
                        ls_keySet}, this.GetEMES_Check_SN_BDA_KEYOperationCompleted, userState);
        }
        
        private void OnGetEMES_Check_SN_BDA_KEYOperationCompleted(object arg) {
            if ((this.GetEMES_Check_SN_BDA_KEYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMES_Check_SN_BDA_KEYCompleted(this, new GetEMES_Check_SN_BDA_KEYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MESWriteBDALog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MESWriteBDALog(string v_bdano, string v_snno, string v_wono, string v_testnodeid, string v_testuserid, string[] ls_LicKeys, string v_recordtime, string v_status, out string ls_ErrMsg) {
            object[] results = this.Invoke("MESWriteBDALog", new object[] {
                        v_bdano,
                        v_snno,
                        v_wono,
                        v_testnodeid,
                        v_testuserid,
                        ls_LicKeys,
                        v_recordtime,
                        v_status});
            ls_ErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MESWriteBDALogAsync(string v_bdano, string v_snno, string v_wono, string v_testnodeid, string v_testuserid, string[] ls_LicKeys, string v_recordtime, string v_status) {
            this.MESWriteBDALogAsync(v_bdano, v_snno, v_wono, v_testnodeid, v_testuserid, ls_LicKeys, v_recordtime, v_status, null);
        }
        
        /// <remarks/>
        public void MESWriteBDALogAsync(string v_bdano, string v_snno, string v_wono, string v_testnodeid, string v_testuserid, string[] ls_LicKeys, string v_recordtime, string v_status, object userState) {
            if ((this.MESWriteBDALogOperationCompleted == null)) {
                this.MESWriteBDALogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMESWriteBDALogOperationCompleted);
            }
            this.InvokeAsync("MESWriteBDALog", new object[] {
                        v_bdano,
                        v_snno,
                        v_wono,
                        v_testnodeid,
                        v_testuserid,
                        ls_LicKeys,
                        v_recordtime,
                        v_status}, this.MESWriteBDALogOperationCompleted, userState);
        }
        
        private void OnMESWriteBDALogOperationCompleted(object arg) {
            if ((this.MESWriteBDALogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MESWriteBDALogCompleted(this, new MESWriteBDALogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatTETestResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatTETestResult(string ls_WONo, string ls_BDA, string BDAResult, out string ls_ErrMsg) {
            object[] results = this.Invoke("UpdatTETestResult", new object[] {
                        ls_WONo,
                        ls_BDA,
                        BDAResult});
            ls_ErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatTETestResultAsync(string ls_WONo, string ls_BDA, string BDAResult) {
            this.UpdatTETestResultAsync(ls_WONo, ls_BDA, BDAResult, null);
        }
        
        /// <remarks/>
        public void UpdatTETestResultAsync(string ls_WONo, string ls_BDA, string BDAResult, object userState) {
            if ((this.UpdatTETestResultOperationCompleted == null)) {
                this.UpdatTETestResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatTETestResultOperationCompleted);
            }
            this.InvokeAsync("UpdatTETestResult", new object[] {
                        ls_WONo,
                        ls_BDA,
                        BDAResult}, this.UpdatTETestResultOperationCompleted, userState);
        }
        
        private void OnUpdatTETestResultOperationCompleted(object arg) {
            if ((this.UpdatTETestResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatTETestResultCompleted(this, new UpdatTETestResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MESGetQCRecordBDACNT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int MESGetQCRecordBDACNT(string ls_WONo) {
            object[] results = this.Invoke("MESGetQCRecordBDACNT", new object[] {
                        ls_WONo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void MESGetQCRecordBDACNTAsync(string ls_WONo) {
            this.MESGetQCRecordBDACNTAsync(ls_WONo, null);
        }
        
        /// <remarks/>
        public void MESGetQCRecordBDACNTAsync(string ls_WONo, object userState) {
            if ((this.MESGetQCRecordBDACNTOperationCompleted == null)) {
                this.MESGetQCRecordBDACNTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMESGetQCRecordBDACNTOperationCompleted);
            }
            this.InvokeAsync("MESGetQCRecordBDACNT", new object[] {
                        ls_WONo}, this.MESGetQCRecordBDACNTOperationCompleted, userState);
        }
        
        private void OnMESGetQCRecordBDACNTOperationCompleted(object arg) {
            if ((this.MESGetQCRecordBDACNTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MESGetQCRecordBDACNTCompleted(this, new MESGetQCRecordBDACNTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMESQCUserNextBDANo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMESQCUserNextBDANo(string ls_WONo, string TempBDA, string ls_TestNodeID, string ls_UID, out string ls_UsedLastNo, out string[] ls_CVCNoS) {
            object[] results = this.Invoke("GetMESQCUserNextBDANo", new object[] {
                        ls_WONo,
                        TempBDA,
                        ls_TestNodeID,
                        ls_UID});
            ls_UsedLastNo = ((string)(results[1]));
            ls_CVCNoS = ((string[])(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMESQCUserNextBDANoAsync(string ls_WONo, string TempBDA, string ls_TestNodeID, string ls_UID) {
            this.GetMESQCUserNextBDANoAsync(ls_WONo, TempBDA, ls_TestNodeID, ls_UID, null);
        }
        
        /// <remarks/>
        public void GetMESQCUserNextBDANoAsync(string ls_WONo, string TempBDA, string ls_TestNodeID, string ls_UID, object userState) {
            if ((this.GetMESQCUserNextBDANoOperationCompleted == null)) {
                this.GetMESQCUserNextBDANoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMESQCUserNextBDANoOperationCompleted);
            }
            this.InvokeAsync("GetMESQCUserNextBDANo", new object[] {
                        ls_WONo,
                        TempBDA,
                        ls_TestNodeID,
                        ls_UID}, this.GetMESQCUserNextBDANoOperationCompleted, userState);
        }
        
        private void OnGetMESQCUserNextBDANoOperationCompleted(object arg) {
            if ((this.GetMESQCUserNextBDANoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMESQCUserNextBDANoCompleted(this, new GetMESQCUserNextBDANoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBDNoBySn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBDNoBySn(string ls_Sn) {
            object[] results = this.Invoke("GetBDNoBySn", new object[] {
                        ls_Sn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBDNoBySnAsync(string ls_Sn) {
            this.GetBDNoBySnAsync(ls_Sn, null);
        }
        
        /// <remarks/>
        public void GetBDNoBySnAsync(string ls_Sn, object userState) {
            if ((this.GetBDNoBySnOperationCompleted == null)) {
                this.GetBDNoBySnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBDNoBySnOperationCompleted);
            }
            this.InvokeAsync("GetBDNoBySn", new object[] {
                        ls_Sn}, this.GetBDNoBySnOperationCompleted, userState);
        }
        
        private void OnGetBDNoBySnOperationCompleted(object arg) {
            if ((this.GetBDNoBySnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBDNoBySnCompleted(this, new GetBDNoBySnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMESNextFailBDANo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMESNextFailBDANo(string ls_WONo, string TempBDA, string ls_TestNodeID, string ls_UID, string ls_Creator, string ls_BDAType, out string[] ls_LeaveFailBDA, out string[] ls_CVCNoS, out string ls_Msg) {
            object[] results = this.Invoke("GetMESNextFailBDANo", new object[] {
                        ls_WONo,
                        TempBDA,
                        ls_TestNodeID,
                        ls_UID,
                        ls_Creator,
                        ls_BDAType});
            ls_LeaveFailBDA = ((string[])(results[1]));
            ls_CVCNoS = ((string[])(results[2]));
            ls_Msg = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMESNextFailBDANoAsync(string ls_WONo, string TempBDA, string ls_TestNodeID, string ls_UID, string ls_Creator, string ls_BDAType) {
            this.GetMESNextFailBDANoAsync(ls_WONo, TempBDA, ls_TestNodeID, ls_UID, ls_Creator, ls_BDAType, null);
        }
        
        /// <remarks/>
        public void GetMESNextFailBDANoAsync(string ls_WONo, string TempBDA, string ls_TestNodeID, string ls_UID, string ls_Creator, string ls_BDAType, object userState) {
            if ((this.GetMESNextFailBDANoOperationCompleted == null)) {
                this.GetMESNextFailBDANoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMESNextFailBDANoOperationCompleted);
            }
            this.InvokeAsync("GetMESNextFailBDANo", new object[] {
                        ls_WONo,
                        TempBDA,
                        ls_TestNodeID,
                        ls_UID,
                        ls_Creator,
                        ls_BDAType}, this.GetMESNextFailBDANoOperationCompleted, userState);
        }
        
        private void OnGetMESNextFailBDANoOperationCompleted(object arg) {
            if ((this.GetMESNextFailBDANoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMESNextFailBDANoCompleted(this, new GetMESNextFailBDANoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MESGetQCRecordBDACNTByMO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MESGetQCRecordBDACNTByMO(string ls_WONo, string ls_StartNo, string ls_EndNo) {
            object[] results = this.Invoke("MESGetQCRecordBDACNTByMO", new object[] {
                        ls_WONo,
                        ls_StartNo,
                        ls_EndNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MESGetQCRecordBDACNTByMOAsync(string ls_WONo, string ls_StartNo, string ls_EndNo) {
            this.MESGetQCRecordBDACNTByMOAsync(ls_WONo, ls_StartNo, ls_EndNo, null);
        }
        
        /// <remarks/>
        public void MESGetQCRecordBDACNTByMOAsync(string ls_WONo, string ls_StartNo, string ls_EndNo, object userState) {
            if ((this.MESGetQCRecordBDACNTByMOOperationCompleted == null)) {
                this.MESGetQCRecordBDACNTByMOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMESGetQCRecordBDACNTByMOOperationCompleted);
            }
            this.InvokeAsync("MESGetQCRecordBDACNTByMO", new object[] {
                        ls_WONo,
                        ls_StartNo,
                        ls_EndNo}, this.MESGetQCRecordBDACNTByMOOperationCompleted, userState);
        }
        
        private void OnMESGetQCRecordBDACNTByMOOperationCompleted(object arg) {
            if ((this.MESGetQCRecordBDACNTByMOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MESGetQCRecordBDACNTByMOCompleted(this, new MESGetQCRecordBDACNTByMOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MESWritBDAUpadeRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MESWritBDAUpadeRecord(string tbda_no, string tsn, string tterminal_id, string temp_id, string[] tLicKeys, string trecordtime, string tstatus, out string tres) {
            object[] results = this.Invoke("MESWritBDAUpadeRecord", new object[] {
                        tbda_no,
                        tsn,
                        tterminal_id,
                        temp_id,
                        tLicKeys,
                        trecordtime,
                        tstatus});
            tres = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MESWritBDAUpadeRecordAsync(string tbda_no, string tsn, string tterminal_id, string temp_id, string[] tLicKeys, string trecordtime, string tstatus) {
            this.MESWritBDAUpadeRecordAsync(tbda_no, tsn, tterminal_id, temp_id, tLicKeys, trecordtime, tstatus, null);
        }
        
        /// <remarks/>
        public void MESWritBDAUpadeRecordAsync(string tbda_no, string tsn, string tterminal_id, string temp_id, string[] tLicKeys, string trecordtime, string tstatus, object userState) {
            if ((this.MESWritBDAUpadeRecordOperationCompleted == null)) {
                this.MESWritBDAUpadeRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMESWritBDAUpadeRecordOperationCompleted);
            }
            this.InvokeAsync("MESWritBDAUpadeRecord", new object[] {
                        tbda_no,
                        tsn,
                        tterminal_id,
                        temp_id,
                        tLicKeys,
                        trecordtime,
                        tstatus}, this.MESWritBDAUpadeRecordOperationCompleted, userState);
        }
        
        private void OnMESWritBDAUpadeRecordOperationCompleted(object arg) {
            if ((this.MESWritBDAUpadeRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MESWritBDAUpadeRecordCompleted(this, new MESWritBDAUpadeRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMESQCUserNextBDANo2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMESQCUserNextBDANo2(string ls_WONo, string TempBDA, string ls_SN, string ls_TestNodeID, string ls_UID, out string ls_UsedLastNo, out string[] ls_CVCNoS, out string ls_ErrMsg) {
            object[] results = this.Invoke("GetMESQCUserNextBDANo2", new object[] {
                        ls_WONo,
                        TempBDA,
                        ls_SN,
                        ls_TestNodeID,
                        ls_UID});
            ls_UsedLastNo = ((string)(results[1]));
            ls_CVCNoS = ((string[])(results[2]));
            ls_ErrMsg = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMESQCUserNextBDANo2Async(string ls_WONo, string TempBDA, string ls_SN, string ls_TestNodeID, string ls_UID) {
            this.GetMESQCUserNextBDANo2Async(ls_WONo, TempBDA, ls_SN, ls_TestNodeID, ls_UID, null);
        }
        
        /// <remarks/>
        public void GetMESQCUserNextBDANo2Async(string ls_WONo, string TempBDA, string ls_SN, string ls_TestNodeID, string ls_UID, object userState) {
            if ((this.GetMESQCUserNextBDANo2OperationCompleted == null)) {
                this.GetMESQCUserNextBDANo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMESQCUserNextBDANo2OperationCompleted);
            }
            this.InvokeAsync("GetMESQCUserNextBDANo2", new object[] {
                        ls_WONo,
                        TempBDA,
                        ls_SN,
                        ls_TestNodeID,
                        ls_UID}, this.GetMESQCUserNextBDANo2OperationCompleted, userState);
        }
        
        private void OnGetMESQCUserNextBDANo2OperationCompleted(object arg) {
            if ((this.GetMESQCUserNextBDANo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMESQCUserNextBDANo2Completed(this, new GetMESQCUserNextBDANo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void checkEmpNoCompletedEventHandler(object sender, checkEmpNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkEmpNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkEmpNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void checkSN_RouteCompletedEventHandler(object sender, checkSN_RouteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkSN_RouteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkSN_RouteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ASSY_DataCompletedEventHandler(object sender, ASSY_DataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ASSY_DataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ASSY_DataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void sendTestResultCompletedEventHandler(object sender, sendTestResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendTestResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendTestResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SN_Relation_BATTERYCompletedEventHandler(object sender, SN_Relation_BATTERYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SN_Relation_BATTERYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SN_Relation_BATTERYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Bluetooth_IDCompletedEventHandler(object sender, Bluetooth_IDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Bluetooth_IDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Bluetooth_IDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Query_Bluetooth_IDCompletedEventHandler(object sender, Query_Bluetooth_IDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Query_Bluetooth_IDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Query_Bluetooth_IDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QUERY_WO_SNANDPANELNOCompletedEventHandler(object sender, QUERY_WO_SNANDPANELNOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QUERY_WO_SNANDPANELNOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QUERY_WO_SNANDPANELNOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertSNInformationCompletedEventHandler(object sender, InsertSNInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSNInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSNInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void checkAssyDataCompletedEventHandler(object sender, checkAssyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkAssyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkAssyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Unbind_Bluetooth_IDCompletedEventHandler(object sender, Unbind_Bluetooth_IDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Unbind_Bluetooth_IDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Unbind_Bluetooth_IDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertSSNCompletedEventHandler(object sender, InsertSSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertDCSNCompletedEventHandler(object sender, InsertDCSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDCSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDCSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void checkSN_StationCompletedEventHandler(object sender, checkSN_StationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkSN_StationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkSN_StationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void sendTestDataCompletedEventHandler(object sender, sendTestDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendTestDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendTestDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void input_snCompletedEventHandler(object sender, input_snCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class input_snCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal input_snCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Insert_DC_ResultCompletedEventHandler(object sender, Insert_DC_ResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_DC_ResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_DC_ResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBDAFailQtyCompletedEventHandler(object sender, GetBDAFailQtyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBDAFailQtyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBDAFailQtyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetEMESBDAWOInfoCompletedEventHandler(object sender, GetEMESBDAWOInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMESBDAWOInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMESBDAWOInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ls_AssignUsedCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ls_AssignBDStartNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string ls_AssignBDEndNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string ls_FormAssignCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string ls_FormBDStartNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string ls_FormBDEndNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string ls_UsedLastNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string[] ls_CVCNoS {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string ls_ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Query_Link_SNCompletedEventHandler(object sender, Query_Link_SNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Query_Link_SNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Query_Link_SNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void insertSNLinkSSNRecCompletedEventHandler(object sender, insertSNLinkSSNRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertSNLinkSSNRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertSNLinkSSNRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void getLinkDataBySNCompletedEventHandler(object sender, getLinkDataBySNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLinkDataBySNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLinkDataBySNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void getSNByLinkDataCompletedEventHandler(object sender, getSNByLinkDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSNByLinkDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSNByLinkDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetEMESUseNextBDANoTestCompletedEventHandler(object sender, GetEMESUseNextBDANoTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMESUseNextBDANoTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMESUseNextBDANoTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ls_UsedLastNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] ls_CVCNoS {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetEMESUseNextBDANoTest2CompletedEventHandler(object sender, GetEMESUseNextBDANoTest2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMESUseNextBDANoTest2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMESUseNextBDANoTest2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ls_UsedLastNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] ls_CVCNoS {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string ls_ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetEMES_Check_SN_BDA_KEYCompletedEventHandler(object sender, GetEMES_Check_SN_BDA_KEYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMES_Check_SN_BDA_KEYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMES_Check_SN_BDA_KEYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ls_ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void MESWriteBDALogCompletedEventHandler(object sender, MESWriteBDALogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MESWriteBDALogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MESWriteBDALogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ls_ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdatTETestResultCompletedEventHandler(object sender, UpdatTETestResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatTETestResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatTETestResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ls_ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void MESGetQCRecordBDACNTCompletedEventHandler(object sender, MESGetQCRecordBDACNTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MESGetQCRecordBDACNTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MESGetQCRecordBDACNTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMESQCUserNextBDANoCompletedEventHandler(object sender, GetMESQCUserNextBDANoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMESQCUserNextBDANoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMESQCUserNextBDANoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ls_UsedLastNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] ls_CVCNoS {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBDNoBySnCompletedEventHandler(object sender, GetBDNoBySnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBDNoBySnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBDNoBySnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMESNextFailBDANoCompletedEventHandler(object sender, GetMESNextFailBDANoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMESNextFailBDANoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMESNextFailBDANoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] ls_LeaveFailBDA {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] ls_CVCNoS {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string ls_Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void MESGetQCRecordBDACNTByMOCompletedEventHandler(object sender, MESGetQCRecordBDACNTByMOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MESGetQCRecordBDACNTByMOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MESGetQCRecordBDACNTByMOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void MESWritBDAUpadeRecordCompletedEventHandler(object sender, MESWritBDAUpadeRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MESWritBDAUpadeRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MESWritBDAUpadeRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string tres {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMESQCUserNextBDANo2CompletedEventHandler(object sender, GetMESQCUserNextBDANo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMESQCUserNextBDANo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMESQCUserNextBDANo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ls_UsedLastNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] ls_CVCNoS {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string ls_ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
}

#pragma warning restore 1591